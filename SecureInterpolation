//Fix->The following steps that have been detected may have insecure interpolation of sensitive variable
// The multiline is the only way to get around it for the sshCommand

def remote = [:]
    remote.name = 'NAME'
    remote.host = 'SERVERNAME'
    remote.user = 'USER'
    remote.password = 'PASSWORD'
    remote.allowAnyHosts = true  
def key = 'MYKEY'    


pipeline {
    agent any
    stages {
        stage ('Build') {
            steps {
                script {
                    myName = "ANDY"
                }
                
                  bat """
                    echo "HELLO ${myName}"
                  """
                  
                 bat """
                    echo 'HELLO AGAIN $myName'
                  """
                  
                bat 'echo HELLO AGAIN AND AGAIN $myName'
                
                sshCommand remote: remote, command: "ls -lrt"
                
                withCredentials([usernamePassword(credentialsId: "api-service", usernameVariable: 'username', passwordVariable: 'password')]) {
                    sshCommand remote: remote, command: './test.sh ' + " '' " +  password //WORKS since there are no ${} in string
                    sshCommand remote: remote, command: "./test.sh '' " + key //WORKS since there are no ${} in string
                    sshCommand remote: remote, command: "./test.sh '' ${key} " //WORKS even though a ${} is in the string since it does not contain a password
                    sshCommand remote: remote, command: "./test.sh ${key} '' " //WORKS even though a ${} is in the string since it does not contain a password
                }
                
                withCredentials([
                      usernamePassword(credentialsId: "api-service-auth", usernameVariable: 'authame', passwordVariable: 'authpass')
                      ]) {
                    sshCommand remote: remote, command: './test.sh ' + " '' " +  authpass + " ''" //WORKS since none of the ${} are in string even though a password is
                    sshCommand remote: remote, command: "./test.sh ${key}" + " '' " +  authpass + " ''" //WARNING
                    sshCommand remote: remote, command: './test.sh $key' + " '' " +  authpass + " ''" //No WARNING bc of no ${} ERROR does not substitute the $key
                    sshCommand remote: remote, command: './test.sh ' + key + " '' " +  authpass + " ''" //WORKS WITH NO WARNING
                }

                    
            }
        }
    }
}
